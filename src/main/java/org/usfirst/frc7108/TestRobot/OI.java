// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc7108.TestRobot;

import org.usfirst.frc7108.TestRobot.commands.*;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.buttons.*;
import org.usfirst.frc7108.TestRobot.subsystems.*;
import org.usfirst.frc7108.TestRobot.commands.CloseCompressor;
import org.usfirst.frc7108.TestRobot.commands.OpenCompressor;;



/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {


    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public JoystickButton joystickButton7;
    public JoystickButton joystickButton6;
    public JoystickButton joystickButton5;
    public JoystickButton joystickButton8;
    public JoystickButton testButton;
    public Joystick joystick1;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public OI() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

        joystick1 = new Joystick(0);
        
        joystickButton5 = new JoystickButton(joystick1, 5);
        joystickButton5.whenPressed(new TakeHatch());
        joystickButton6 = new JoystickButton(joystick1, 6);
        joystickButton6.whenPressed(new ReleaseHatch());
        joystickButton7 = new JoystickButton(joystick1, 7);
        joystickButton7.whenPressed(new OpenCompressor());
        joystickButton8 = new JoystickButton(joystick1,8);
        joystickButton8.whenPressed(new CloseCompressor());
        testButton = new JoystickButton(joystick1, 7 );
        testButton.whileHeld(new victorDrive());

        // SmartDashboard Buttons
        SmartDashboard.putData("Release Hatch", new ReleaseHatch());
        SmartDashboard.putData("Take Hatch", new TakeHatch());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
    public Joystick getJoystick1() {
        return joystick1;
    }


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
}

